version: 0.2

phases:

  install:
    commands:
      - echo "Checking AWS credentials..."
      - aws sts get-caller-identity
      - aws s3 ls s3://$ARTIFACT_BUCKET

      - echo "Installing NVM and Node.js"
      - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
      - export NVM_DIR="$HOME/.nvm"
      - . "$NVM_DIR/nvm.sh"
      - nvm install $NODE_VERSION
      - nvm use $NODE_VERSION
      - nvm install $NODE_VERSION
      - nvm use $NODE_VERSION
      - node -v
      - npm -v

      - echo "Installing npm dependencies..."
      - npm ci

  build:
    commands:
      - echo Build started on  `date`

      - export VERSION=${CODEBUILD_WEBHOOK_HEAD_REF#refs/heads/}@$CODEBUILD_SOURCE_VERSION
      - export ARTIFACT_NAME=code-server-$VERSION-linux-$ARCH
      - export ARCH=$(uname -m)
      - export OS=linux
      - echo Artifact => $ARTIFACT_NAME

      - echo Build code-server ===>
      - time npm run build
      - echo <====================

      - echo Build vscode ===>
      - time npm run build:vscode
      - echo <====================

      - echo Build release package ===>
      - time npm run release
      - time npm run release:standalone
      - time npm run test:integration
      - time npm run package
      - echo <=========================

  post_build:
    commands:

      - echo Uploading artifact ===>
      - S3_KEY="$ARTIFACT_PREFIX/$ARTIFACT_NAME"
      - echo "Uploading $S3_KEY to S3..."
      - aws s3 cp $ARTIFACT_NAME.zip s3://$ARTIFACT_BUCKET/$S3_KEY
      - echo <======================

      - echo Pruning old artifacts ===>
      - |
        (
          set -euo pipefail
          echo "Keeping last $MAX_ARTIFACTS artifacts in s3://$BUCKET_NAME/$ARTIFACT_PREFIX"

          OBJECTS=$(aws s3api list-objects-v2 \
            --bucket "$BUCKET_NAME" \
            --prefix "$ARTIFACT_PREFIX" \
            --query 'Contents.[Key, LastModified]' \
            --output text | sort -k2)

          TOTAL_OBJECTS=$(echo "$OBJECTS" | wc -l)
          echo "Total artifacts found: $TOTAL_OBJECTS"

          if (( TOTAL_OBJECTS > MAX_ARTIFACTS )); then
            TO_DELETE=$((TOTAL_OBJECTS - MAX_ARTIFACTS))
            echo "Pruning $TO_DELETE oldest artifacts..."

            echo "$OBJECTS" | head -n $TO_DELETE | awk '{print $1}' | while read -r KEY; do
              echo "Deleting: s3://$BUCKET_NAME/$KEY"
              aws s3 rm "s3://$BUCKET_NAME/$KEY"
            done
          else
            echo "No pruning needed."
          fi
        ) || echo "⚠️ Artifact pruning failed 
      - echo <=========================
